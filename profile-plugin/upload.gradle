apply plugin: 'maven'

// args
// NEXUS_USERNAME nexus用户名
// NEXUS_PASSWORD nexus密码
// POM_GROUP_ID group_id
// POM_ARTIFACT_ID artifact_id
// POM_VERSION version
// POM_PACKAGING packaging，默认是jar或aar

afterEvaluate { project ->
    uploadArchives {
        repositories {
            mavenDeployer {

                inputs.property('NEXUS_USERNAME', NEXUS_USERNAME)
                inputs.property('NEXUS_PASSWORD', NEXUS_PASSWORD)

                inputs.property('POM_GROUP_ID', POM_GROUP_ID)
                inputs.property('POM_ARTIFACT_ID', POM_ARTIFACT_ID)
                inputs.property('POM_VERSION', POM_VERSION)
                //inputs.property('POM_PACKAGING', POM_PACKAGING)

                repository(url: 'http://nexus.codesync.cn/content/repositories/md') {
                    authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
                }

                snapshotRepository(url: 'http://nexus.codesync.cn/content/repositories/md') {
                    authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
                }

                pom.project {
                    groupId POM_GROUP_ID
                    artifactId POM_ARTIFACT_ID
                    version POM_VERSION
                    packaging project.hasProperty('POM_PACKAGING') ? project.property('POM_PACKAGING') : 'jar'
                }
            }
        }
    }

    //源代码
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.java.srcDirs
    }

    artifacts {
        archives sourcesJar
    }
}
